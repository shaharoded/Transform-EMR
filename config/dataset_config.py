import os

# Get project root (one level up from backend/)
PROJECT_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))

# Data files
TEMPORAL_DATA_FILE = os.path.join(PROJECT_ROOT, 'data', 'synthetic_diabetes_temporal_data.csv')
CTX_DATA_FILE = os.path.join(PROJECT_ROOT, 'data', 'synthetic_diabetes_context_data.csv')


# Pre-definition of states and trends - TIRPS with duration, for token split to _start and _end
STATES = [
    'GLUCOSE_MEASURE_LAB', 'GLUCOSE_MEASURE_CAPILLARY', 'HEMOGLOBIN_MEASURE', 'HEMOGLOBIN_DISTRIBUTION_MEASURE',
    'HEMOGLOBIN-A1C_MEASURE', 'HEMATOCRIT_MEASURE', 'MCV_MEASURE', 'MCH_MEASURE', 'LYMPHOCYTES_MEASURE',
    'NEUTROPHILS_MEASURE', 'MONOCYTES_MEASURE', 'RDW_MEASURE', 'PLT_MEASURE', 'PLT_DISTRIBUTION_MEASURE',
    'MPV_MEASURE', 'CREATININE_MEASURE_BLOOD', 'CREATININE_MEASURE_URINE', 'UREA_MEASURE', 'ALBUMIN_MEASURE_BLOOD',
    'ALBUMIN_MEASURE_URINE', 'SODIUM_MEASURE', 'POTASSIUM_MEASURE', 'ASPARATE-AMINOTRANSFERASE_MEASURE',
    'ALANINE-AMINOTRANSFERASE_MEASURE', 'PH_MEASURE', 'BICARBONATE_MEASURE', 'THYROID-STIMULATING HORMONE_MEASURE',
    'ALKALINE-PHOSPHATASE_MEASURE', 'BLOOD_PRESSURE_MEASURE', 'BLOOD_PRESSURE_SYSTOLIC_MEASURE',
    'BLOOD_PRESSURE_DIASTOLIC_MEASURE', 'HEART_RATE_MEASURE', 'E-GFR_MEASURE', 'BMI_MEASURE'
]

# Define the prediction targets and <eot> tokens to terminate the inference
OUTCOMES = ['DEATH', 'COMPLICATION', 'KETOACIDOSIS', 'COMA', 'RELEASE']
TERMINAL_OUTCOMES = ['DEATH', 'RELEASE']